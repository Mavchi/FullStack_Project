[{"/home/alex/Project/FullStack_Project/front/src/index.js":"1","/home/alex/Project/FullStack_Project/front/src/App.js":"2","/home/alex/Project/FullStack_Project/front/src/components/FooterMenu.js":"3","/home/alex/Project/FullStack_Project/front/src/components/WorkoutThumbnail.js":"4","/home/alex/Project/FullStack_Project/front/src/components/Search.js":"5","/home/alex/Project/FullStack_Project/front/src/services/workout_descriptions.js":"6","/home/alex/Project/FullStack_Project/front/src/pages/WorkoutPage.js":"7","/home/alex/Project/FullStack_Project/front/src/services/workout_pages.js":"8","/home/alex/Project/FullStack_Project/front/src/pages/WorkoutTabs.js":"9","/home/alex/Project/FullStack_Project/front/src/pages/login/LogIn.js":"10"},{"size":218,"mtime":1611519430838,"results":"11","hashOfConfig":"12"},{"size":1667,"mtime":1612095695231,"results":"13","hashOfConfig":"12"},{"size":1026,"mtime":1611505575327,"results":"14","hashOfConfig":"12"},{"size":902,"mtime":1611515470135,"results":"15","hashOfConfig":"12"},{"size":706,"mtime":1611523490893,"results":"16","hashOfConfig":"12"},{"size":278,"mtime":1611667161556,"results":"17","hashOfConfig":"12"},{"size":991,"mtime":1612008762684,"results":"18","hashOfConfig":"12"},{"size":1042,"mtime":1612008534317,"results":"19","hashOfConfig":"12"},{"size":1493,"mtime":1611915445897,"results":"20","hashOfConfig":"12"},{"size":6696,"mtime":1612105938433,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1cgi9h3",{"filePath":"25","messages":"26","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/alex/Project/FullStack_Project/front/src/index.js",[],["46","47"],"/home/alex/Project/FullStack_Project/front/src/App.js",["48","49","50","51","52"],"import React, { useEffect, useState } from 'react'\nimport lodash from 'lodash'\n\nimport LogIn from './pages/login/LogIn'\nimport WorkoutPage from './pages/WorkoutPage'\n\nimport workoutDescService from './services/workout_descriptions'\nimport workoutPageService from './services/workout_pages'\n\nfunction App() {\n  const [defaultWorkouts, setDefaultWorkouts] = useState([])\n  const [workoutLists, setWorkoutLists] = useState({ tabs: [], favourite: [] })\n  const [globalState, setGlobalState] = useState(\"log in\")\n\n  useEffect(() => {\n    workoutDescService\n      .getAll()\n      .then(workouts => {\n        // download default workouts\n        console.log('workouts', workouts)\n        setDefaultWorkouts(lodash.cloneDeep(workouts))\n      })\n      .catch(error => {\n        console.log('couldnt download workout descriptions from server:', error)\n      })\n  }, [])\n/*\n  useEffect(() => {\n    workoutPageService\n      .getAll()\n      .then(pages => {\n        // download menu items and included workouts\n        console.log('pages', pages)\n        setWorkoutLists(lodash.cloneDeep(pages))\n      })\n      .catch(error => {\n        console.log('couldnt download workout menu from server:', error)\n      })\n  }, [])\n*/\n  const handleGlobalStateChange = (action) => {\n    return () => setGlobalState(action)\n  }\n\n  if(globalState === 'log in')\n    return (\n      <div>\n        <LogIn setGlobalState={handleGlobalStateChange}/>\n      </div>\n    )\n/*\n  if (globalState === \"workouts\") {\n    return (\n      <div className=\"content\">\n        <WorkoutPage\n          workouts={defaultWorkouts}\n          tabs={workoutLists}\n        />\n      </div>\n    )\n  }*/\n}\n\nexport default App;\n","/home/alex/Project/FullStack_Project/front/src/components/FooterMenu.js",[],"/home/alex/Project/FullStack_Project/front/src/components/WorkoutThumbnail.js",[],"/home/alex/Project/FullStack_Project/front/src/components/Search.js",[],"/home/alex/Project/FullStack_Project/front/src/services/workout_descriptions.js",[],"/home/alex/Project/FullStack_Project/front/src/pages/WorkoutPage.js",["53","54"],"import React, { useState } from 'react'\n\nimport FooterMenu from '../components/FooterMenu'\nimport Search from '../components/Search'\nimport WorkoutTabs from './WorkoutTabs'\n\n//import { Tabs } from 'react-tabs';\n//import { Tabs } from 'react-materialize'\n//import 'react-tabs/style/react-tabs.css';\n\nconst WorkoutPage = ({ workouts, tabs }) => {\n    const [localState, setLocalState] = useState('main')\n\n    console.log('workouts', workouts)\n\n    const handleTabClick = () => console.log('tab menu clikki')\n    const handleMenuClick = () => console.log('footermenu clikki')\n\n    return (\n        <div>\n            {tabs[0].name}\n        </div>\n    )\n\n    if (localState === 'main') {\n        return (\n            <div>\n                <Search handleChange={() => console.log('emmä tiiä')} />\n                <WorkoutTabs tabs={tabs} handleClick={handleTabClick} />\n                <FooterMenu handleClick={handleMenuClick} />\n            </div>\n        )\n    }\n}\n\nexport default WorkoutPage","/home/alex/Project/FullStack_Project/front/src/services/workout_pages.js",[],"/home/alex/Project/FullStack_Project/front/src/pages/WorkoutTabs.js",["55"],"import React, { useState } from 'react'\nimport ScrollMenu from 'react-horizontal-scrolling-menu';\n//import { Tab } from 'react-materialize'\nimport WorkoutThumbnail from '../components/WorkoutThumbnail'\n\nimport './WorkoutTabs.css'\n\n\n\n// Print menu item\nconst MenuItem = ({ text, selected }) => {\n    return (\n        <div className={`menu-item ${selected ? 'active' : ''}`}>\n            {text}\n        </div>\n    )\n}\n\n// all menu item component\nconst Menu = ( list, selected ) => \n    list.map(el => {\n        const {name} = el\n\n        return <MenuItem text={name} key={'tab-menu-item-'+name} selected={selected} />\n    })\n\nconst Arrow = ({ text, className }) => {\n    return (\n        <div\n            className={className}\n        >{text}</div>\n    )\n}\nconst ArrowLeft = Arrow({ text: '<', className: 'arrow-prev' });\nconst ArrowRight = Arrow({ text: '>', className: 'arrow-next' });\n\nconst WorkoutPages = ({ tabs, handleClick }) => {\n    const [selected, setSelected] = useState({selected: tabs[0].name})\n    const list = tabs.map(tab => tab.name)\n    const onSelect = key => {\n        setSelected({selected: key})\n    }\n\n    // create menu items\n    const menuItems = Menu(list, selected)\n    return (\n        <div>\n            <ScrollMenu\n                data={menuItems}\n                arrowLeft={ArrowLeft}\n                arrowRight={ArrowRight}\n                selected={selected}\n                onSelect={onSelect}\n            />\n        </div>\n    )\n}\n\nexport default WorkoutPages","/home/alex/Project/FullStack_Project/front/src/pages/login/LogIn.js",["56"],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":5,"column":8,"nodeType":"63","messageId":"64","endLine":5,"endColumn":19},{"ruleId":"61","severity":1,"message":"65","line":8,"column":8,"nodeType":"63","messageId":"64","endLine":8,"endColumn":26},{"ruleId":"61","severity":1,"message":"66","line":11,"column":10,"nodeType":"63","messageId":"64","endLine":11,"endColumn":25},{"ruleId":"61","severity":1,"message":"67","line":12,"column":10,"nodeType":"63","messageId":"64","endLine":12,"endColumn":22},{"ruleId":"61","severity":1,"message":"68","line":12,"column":24,"nodeType":"63","messageId":"64","endLine":12,"endColumn":39},{"ruleId":"61","severity":1,"message":"69","line":12,"column":24,"nodeType":"63","messageId":"64","endLine":12,"endColumn":37},{"ruleId":"70","severity":1,"message":"71","line":25,"column":5,"nodeType":"72","messageId":"73","endLine":33,"endColumn":6},{"ruleId":"61","severity":1,"message":"74","line":4,"column":8,"nodeType":"63","messageId":"64","endLine":4,"endColumn":24},{"ruleId":"61","severity":1,"message":"69","line":95,"column":24,"nodeType":"63","messageId":"64","endLine":95,"endColumn":37},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-unused-vars","'WorkoutPage' is defined but never used.","Identifier","unusedVar","'workoutPageService' is defined but never used.","'defaultWorkouts' is assigned a value but never used.","'workoutLists' is assigned a value but never used.","'setWorkoutLists' is assigned a value but never used.","'setLocalState' is assigned a value but never used.","no-unreachable","Unreachable code.","IfStatement","unreachableCode","'WorkoutThumbnail' is defined but never used.","no-global-assign","no-unsafe-negation"]