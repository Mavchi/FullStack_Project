[{"/home/alex/Project/FullStack_Project/front/src/index.js":"1","/home/alex/Project/FullStack_Project/front/src/App.js":"2","/home/alex/Project/FullStack_Project/front/src/components/FooterMenu.js":"3","/home/alex/Project/FullStack_Project/front/src/components/Search.js":"4","/home/alex/Project/FullStack_Project/front/src/services/workout_descriptions.js":"5","/home/alex/Project/FullStack_Project/front/src/services/workout_pages.js":"6","/home/alex/Project/FullStack_Project/front/src/pages/WorkoutTabs.js":"7","/home/alex/Project/FullStack_Project/front/src/pages/login/LogIn.js":"8","/home/alex/Project/FullStack_Project/front/src/services/login.js":"9","/home/alex/Project/FullStack_Project/front/src/components/Workout.js":"10","/home/alex/Project/FullStack_Project/front/src/services/favourite_workouts.js":"11","/home/alex/Project/FullStack_Project/front/src/pages/Home.js":"12","/home/alex/Project/FullStack_Project/front/src/pages/Settings.js":"13","/home/alex/Project/FullStack_Project/front/src/services/appData.js":"14","/home/alex/Project/FullStack_Project/front/src/pages/Workouts.js":"15"},{"size":218,"mtime":1611519430838,"results":"16","hashOfConfig":"17"},{"size":2404,"mtime":1612363874164,"results":"18","hashOfConfig":"17"},{"size":1026,"mtime":1611505575327,"results":"19","hashOfConfig":"17"},{"size":706,"mtime":1611523490893,"results":"20","hashOfConfig":"17"},{"size":278,"mtime":1611667161556,"results":"21","hashOfConfig":"17"},{"size":1042,"mtime":1612008534317,"results":"22","hashOfConfig":"17"},{"size":4706,"mtime":1612365657345,"results":"23","hashOfConfig":"17"},{"size":7317,"mtime":1612342347784,"results":"24","hashOfConfig":"17"},{"size":1318,"mtime":1612342256819,"results":"25","hashOfConfig":"17"},{"size":900,"mtime":1612366202933,"results":"26","hashOfConfig":"17"},{"size":465,"mtime":1612293587618,"results":"27","hashOfConfig":"17"},{"size":475,"mtime":1612336967501,"results":"28","hashOfConfig":"17"},{"size":533,"mtime":1612342114190,"results":"29","hashOfConfig":"17"},{"size":749,"mtime":1612342516065,"results":"30","hashOfConfig":"17"},{"size":1287,"mtime":1612366556440,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1cgi9h3",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/home/alex/Project/FullStack_Project/front/src/index.js",[],["65","66"],"/home/alex/Project/FullStack_Project/front/src/App.js",[],"/home/alex/Project/FullStack_Project/front/src/components/FooterMenu.js",[],"/home/alex/Project/FullStack_Project/front/src/components/Search.js",[],"/home/alex/Project/FullStack_Project/front/src/services/workout_descriptions.js",[],["67","68"],"/home/alex/Project/FullStack_Project/front/src/services/workout_pages.js",[],"/home/alex/Project/FullStack_Project/front/src/pages/WorkoutTabs.js",["69","70","71","72","73","74"],"\n\nimport './WorkoutTabs.css'\n\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ScrollMenu from \"react-horizontal-scrolling-menu\";\nimport './WorkoutTabs.css'\n\nconst MenuItem = ({ text, selected }) => {\n    return <div className={`menu-item ${selected ? \"active\" : \"\"}`}>{text}</div>;\n};\n\nexport const Menu = (list, selected) =>\n    list.map(el => {\n        const { name } = el;\n\n        return <MenuItem text={name} key={name} selected={selected} />;\n    });\n\nconst Arrow = ({ text, className }) => {\n    return <div className={className}>{text}</div>;\n};\nArrow.propTypes = {\n    text: PropTypes.string,\n    className: PropTypes.string\n};\n\nexport const ArrowLeft = Arrow({ text: \"<\", className: \"arrow-prev\" });\nexport const ArrowRight = Arrow({ text: \">\", className: \"arrow-next\" });\n\nconst WorkoutsPage = ({ appData, handleCurrentTab }) => {\n    const [state, setState] = useState({\n        alignCenter: true,\n        clickWhenDrag: false,\n        dragging: true,\n        hideArrows: true,\n        hideSingleArrow: true,\n        itemsCount: appData.workout_menus.length,\n        scrollToSelected: false,\n        selected: \"For You\",\n        translate: 0,\n        transition: 0.3,\n        wheel: true\n    })\n    let list = [\n        { name: \"For You\" },\n        { name: \"Popular\" },\n        { name: \"Interval\" },\n        { name: \"Muscle\" },\n        { name: \"Strength\" },\n        { name: \"Full body\" },\n        { name: \"Upper Body\" },\n        { name: \"Lower Body\" },\n    ]\n\n    let menu = null\n    let menuItems = Menu(list.slice(0, list.length), state.selected)\n\n    const onFirstItemVisible = () => {\n        console.log(\"first item is visible\")\n    }\n\n    const onLastItemVisible = () => {\n        console.log(\"last item is visible\")\n\n        const newItems = Array(5)\n            .fill(1)\n            .map((el, ind) => ({ name: `item${list.length + ind + 1}` }))\n        list = list.concat(newItems)\n        menuItems = Menu(list, list.slice(-1)[0].name);\n        setState({\n            ...state,\n            itemsCount: list.length,\n            selected: state.selected\n        })\n    }\n\n    const onUpdate = ({ translate }) => {\n        console.log(`onUpdate: translate: ${translate}`);\n        setState({ ...state,translate });\n    };\n\n    const onSelect = key => {\n        console.log(`onSelect: ${key}`);\n        handleCurrentTab(key)\n        setState({ ...state,selected: key });\n    };\n\n    const componentDidUpdate = (prevProps, prevState) => {\n        const { alignCenter } = prevState;\n        const { alignCenter: alignCenterNew } = state;\n        if (alignCenter !== alignCenterNew) {\n            menu.setInitial();\n        }\n    }\n\n    const setItemsCount = ev => {\n        const { itemsCount = list.length, selected } = state;\n        const val = +ev.target.value;\n        const itemsCountNew =\n            !isNaN(val) && val <= list.length && val >= 0\n                ? +ev.target.value\n                : list.length;\n        const itemsCountChanged = itemsCount !== itemsCountNew;\n\n        if (itemsCountChanged) {\n            menuItems = Menu(list.slice(0, itemsCountNew), selected);\n            setState({\n                ...state,itemsCount: itemsCountNew\n            });\n        }\n    };\n\n    const setSelected = ev => {\n        const { value } = ev.target;\n        setState({ ...state,selected: String(value) });\n    }\n\n    menu = menuItems\n    const {\n        alignCenter,\n        clickWhenDrag,\n        hideArrows,\n        dragging,\n        hideSingleArrow,\n        itemsCount,\n        scrollToSelected,\n        selected,\n        translate,\n        transition,\n        wheel\n    } = state\n\n    const checkboxStyle = {\n        margin: \"5px 10px\"\n    };\n    const valueStyle = {\n        margin: \"5px 10px\",\n        display: \"inline-block\"\n    }\n\n    return (\n        <div className=\"App\" style={{ color: 'white' }}>\n\n            <ScrollMenu\n                alignCenter={alignCenter}\n                arrowLeft={ArrowLeft}\n                arrowRight={ArrowRight}\n                clickWhenDrag={clickWhenDrag}\n                data={menu}\n                dragging={dragging}\n                hideArrows={hideArrows}\n                hideSingleArrow={hideSingleArrow}\n                onFirstItemVisible={onFirstItemVisible}\n                onLastItemVisible={onLastItemVisible}\n                onSelect={onSelect}\n                onUpdate={onUpdate}\n                ref={el => (menu = el)}\n                scrollToSelected={scrollToSelected}\n                selected={selected}\n                transition={+transition}\n                translate={translate}\n                wheel={wheel}\n            />\n\n        </div>\n    )\n}\n\nexport default WorkoutsPage","/home/alex/Project/FullStack_Project/front/src/pages/login/LogIn.js",[],"/home/alex/Project/FullStack_Project/front/src/services/login.js",[],"/home/alex/Project/FullStack_Project/front/src/components/Workout.js",[],"/home/alex/Project/FullStack_Project/front/src/services/favourite_workouts.js",[],"/home/alex/Project/FullStack_Project/front/src/pages/Home.js",[],"/home/alex/Project/FullStack_Project/front/src/pages/Settings.js",[],"/home/alex/Project/FullStack_Project/front/src/services/appData.js",[],"/home/alex/Project/FullStack_Project/front/src/pages/Workouts.js",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"75","replacedBy":"79"},{"ruleId":"77","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":90,"column":11,"nodeType":"83","messageId":"84","endLine":90,"endColumn":29},{"ruleId":"81","severity":1,"message":"85","line":98,"column":11,"nodeType":"83","messageId":"84","endLine":98,"endColumn":24},{"ruleId":"81","severity":1,"message":"86","line":115,"column":11,"nodeType":"83","messageId":"84","endLine":115,"endColumn":22},{"ruleId":"81","severity":1,"message":"87","line":127,"column":9,"nodeType":"83","messageId":"84","endLine":127,"endColumn":19},{"ruleId":"81","severity":1,"message":"88","line":135,"column":11,"nodeType":"83","messageId":"84","endLine":135,"endColumn":24},{"ruleId":"81","severity":1,"message":"89","line":138,"column":11,"nodeType":"83","messageId":"84","endLine":138,"endColumn":21},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],["90"],["91"],"no-unused-vars","'componentDidUpdate' is assigned a value but never used.","Identifier","unusedVar","'setItemsCount' is assigned a value but never used.","'setSelected' is assigned a value but never used.","'itemsCount' is assigned a value but never used.","'checkboxStyle' is assigned a value but never used.","'valueStyle' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]