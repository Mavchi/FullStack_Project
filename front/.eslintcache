[{"/home/alex/Project/FullStack_Project/front/src/index.js":"1","/home/alex/Project/FullStack_Project/front/src/App.js":"2","/home/alex/Project/FullStack_Project/front/src/components/FooterMenu.js":"3","/home/alex/Project/FullStack_Project/front/src/components/Search.js":"4","/home/alex/Project/FullStack_Project/front/src/services/workout_descriptions.js":"5","/home/alex/Project/FullStack_Project/front/src/pages/WorkoutPage.js":"6","/home/alex/Project/FullStack_Project/front/src/services/workout_pages.js":"7","/home/alex/Project/FullStack_Project/front/src/pages/WorkoutTabs.js":"8","/home/alex/Project/FullStack_Project/front/src/pages/login/LogIn.js":"9","/home/alex/Project/FullStack_Project/front/src/services/login.js":"10","/home/alex/Project/FullStack_Project/front/src/components/Workout.js":"11","/home/alex/Project/FullStack_Project/front/src/services/favourite_workouts.js":"12","/home/alex/Project/FullStack_Project/front/src/pages/Home.js":"13"},{"size":218,"mtime":1611519430838,"results":"14","hashOfConfig":"15"},{"size":1804,"mtime":1612298138554,"results":"16","hashOfConfig":"15"},{"size":1026,"mtime":1611505575327,"results":"17","hashOfConfig":"15"},{"size":706,"mtime":1611523490893,"results":"18","hashOfConfig":"15"},{"size":278,"mtime":1611667161556,"results":"19","hashOfConfig":"15"},{"size":997,"mtime":1612293612107,"results":"20","hashOfConfig":"15"},{"size":1042,"mtime":1612008534317,"results":"21","hashOfConfig":"15"},{"size":1490,"mtime":1612293599866,"results":"22","hashOfConfig":"15"},{"size":7429,"mtime":1612292971809,"results":"23","hashOfConfig":"15"},{"size":1326,"mtime":1612297807932,"results":"24","hashOfConfig":"15"},{"size":863,"mtime":1612207714430,"results":"25","hashOfConfig":"15"},{"size":465,"mtime":1612293587618,"results":"26","hashOfConfig":"15"},{"size":238,"mtime":1612290219612,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1cgi9h3",{"filePath":"31","messages":"32","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"35"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"35"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"30"},"/home/alex/Project/FullStack_Project/front/src/index.js",[],["60","61"],"/home/alex/Project/FullStack_Project/front/src/App.js",["62","63","64","65","66"],"/home/alex/Project/FullStack_Project/front/src/components/FooterMenu.js",[],["67","68"],"/home/alex/Project/FullStack_Project/front/src/components/Search.js",[],"/home/alex/Project/FullStack_Project/front/src/services/workout_descriptions.js",[],"/home/alex/Project/FullStack_Project/front/src/pages/WorkoutPage.js",["69","70"],"import React, { useState } from 'react'\n\nimport FooterMenu from '../components/FooterMenu'\nimport Search from '../components/Search'\nimport WorkoutTabs from './WorkoutTabs'\n\n//import { Tabs } from 'react-tabs';\n//import { Tabs } from 'react-materialize'\n//import 'react-tabs/style/react-tabs.css';\n\nconst WorkoutPage = ({ workouts, tabs }) => {\n    const [localState, setLocalState] = useState('main')\n\n    console.log('workouts', workouts)\n\n    const handleTabClick = () => console.log('tab menu clikki')\n    const handleMenuClick = () => console.log('footermenu clikki')\n\n    return (\n        <div>\n            {tabs[0].name}\n        </div>\n    )\n\n    if (localState === 'main') {\n        return (\n            <div>\n                <Search handleChange={() => console.log('emmä tiiä')} />\n                <WorkoutTabs tabs={tabs} handleClick={handleTabClick} />\n                <FooterMenu handleClick={handleMenuClick} />\n            </div>\n        )\n    }\n}\n\nexport default WorkoutPage","/home/alex/Project/FullStack_Project/front/src/services/workout_pages.js",[],"/home/alex/Project/FullStack_Project/front/src/pages/WorkoutTabs.js",["71"],"import React, { useState } from 'react'\nimport ScrollMenu from 'react-horizontal-scrolling-menu';\n//import { Tab } from 'react-materialize'\nimport WorkoutThumbnail from '../components/Workout'\n\nimport './WorkoutTabs.css'\n\n\n\n// Print menu item\nconst MenuItem = ({ text, selected }) => {\n    return (\n        <div className={`menu-item ${selected ? 'active' : ''}`}>\n            {text}\n        </div>\n    )\n}\n\n// all menu item component\nconst Menu = ( list, selected ) => \n    list.map(el => {\n        const {name} = el\n\n        return <MenuItem text={name} key={'tab-menu-item-'+name} selected={selected} />\n    })\n\nconst Arrow = ({ text, className }) => {\n    return (\n        <div\n            className={className}\n        >{text}</div>\n    )\n}\nconst ArrowLeft = Arrow({ text: '<', className: 'arrow-prev' });\nconst ArrowRight = Arrow({ text: '>', className: 'arrow-next' });\n\nconst WorkoutPages = ({ tabs, handleClick }) => {\n    const [selected, setSelected] = useState({selected: tabs[0].name})\n    const list = tabs.map(tab => tab.name)\n    const onSelect = key => {\n        setSelected({selected: key})\n    }\n\n    // create menu items\n    const menuItems = Menu(list, selected)\n    return (\n        <div>\n            <ScrollMenu\n                data={menuItems}\n                arrowLeft={ArrowLeft}\n                arrowRight={ArrowRight}\n                selected={selected}\n                onSelect={onSelect}\n            />\n        </div>\n    )\n}\n\nexport default WorkoutPages","/home/alex/Project/FullStack_Project/front/src/pages/login/LogIn.js",["72"],"import React, { useState } from 'react'\nimport './login.css'\n\nimport facebook_icon from '../../img/icons/facebook-icon.svg'\nimport google_icon from '../../img/icons/google-icon.svg'\n\nimport 'materialize-css';\nimport { TextInput } from 'react-materialize';\n\nimport loginService from '../../services/login'\n\nconst Welcome = ({ handleGlobalState }) => {\n    return (\n        <div className='welcome-page'>\n            <div className='login-welcome-button-container'>\n                <div className='login-button login-rounded login-green' onClick={handleGlobalState('sign up')}>Create Account</div>\n                <div className='login-button login-rounded login-grey' onClick={handleGlobalState('sign in')}>Log In</div>\n            </div>\n        </div>\n    )\n}\n\nconst SignUp = ({ handleGlobalState }) => {\n    // main, sign up-facebook, sign up-google, sign up-email\n    const [localState, setLocalState] = useState('main')\n\n    const handleLocalStateChange = (state) => {\n        return () => (\n            setLocalState(state)\n        )\n    }\n\n    if (localState === 'main')\n        return (\n            <div className='sign-page'>\n                <div className='sign-header'>\n                    Welcome\n                </div>\n                <div className='sign-container'>\n                    <div className='login-button login-blue' onClick={handleLocalStateChange('sign up-facebook')}>\n                        <div className={'login-thumbnail-container'}>\n                            <img style={{ height: '40px' }} src={facebook_icon} alt={'facebook-icon'} />\n                        </div>\n                        Sign Up with Facebook\n                    </div>\n                    <div className='login-button login-blue' onClick={handleLocalStateChange('sign up-google')}>\n                        <div className={'login-thumbnail-container'}>\n                            <img style={{ height: '40px' }} src={google_icon} alt={'google-icon'} />\n                        </div>\n                        Sign Up with Google\n                    </div>\n\n                    <div className='login-button' onClick={handleLocalStateChange('or')}>\n                        or\n                    </div>\n                    <div className='login-button login-grey' onClick={handleLocalStateChange('sign up-email')}>\n                        Sign Up with Email\n                    </div>\n                </div>\n                <div style={{ color: '#E4DEDE', textAlign: 'center' }}>\n                    Already have an account? <span style={{ color: '#395185' }} onClick={handleGlobalState('sign in')}>Log In</span>\n                </div>\n            </div>\n        )\n\n    if (localState === 'sign up-email')\n        return (\n            <div className='login-container-centered'>\n                <div style={{ fontWeight: 'bold', fontSize: '30px', textAlign: 'center', color: '#E4DEDE' }}>Sign Up with Email</div>\n                <TextInput\n                    label='Name'\n                />\n                <TextInput\n                    label='Email'\n                    email='true'\n                />\n                <TextInput\n                    label='Create Password'\n                    password='true'\n                />\n\n                <div style={{ color: '#E4DEDE', textAlign: 'center' }}>\n                    Permission for marketing\n                </div>\n\n                <div className='login-button login-grey'>\n                    Create Account\n                </div>\n                <div style={{ color: '#E4DEDE', textAlign: 'center' }}>\n                    Already have an account? <span style={{ color: '#395185' }} onClick={handleGlobalState('sign in')}>Log In</span>\n                </div>\n            </div>\n        )\n}\n\nconst SignIn = ({ handleInitUser, handleGlobalState }) => {\n    const [localState, setLocalState] = useState('main')\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n\n    const handleLocalStateChange = (state) => {\n        return () => (\n            console.log(state, 'clicked')\n        )\n    }\n\n    const handleLogin = async (event) => {\n        event.preventDefault()\n\n        try {\n            const user = await loginService.login({\n                username, password\n            })\n            \n            setUsername('')\n            setPassword('')\n            handleInitUser(user)\n        } catch (exception) {\n            console.log('wrong credentials, cant log in')\n        }\n    }\n\n    if (localState === 'main')\n        return (\n            <div className='sign-page'>\n                <div className='sign-header'>\n                    Welcome Back\n                </div>\n                <div className='sign-container'>\n                    <div className='login-button login-blue' onClick={handleLocalStateChange('sign in-facebook')}>\n                        <div className={'login-thumbnail-container'}>\n                            <img style={{ height: '40px' }} src={facebook_icon} alt={'facebook-icon'} />\n                        </div>\n                        Log In with Facebook\n                    </div>\n                    <div className='login-button login-blue' onClick={handleLocalStateChange('sign in-google')}>\n                        <div className={'login-thumbnail-container'}>\n                            <img style={{ height: '40px' }} src={google_icon} alt={'google-icon'} />\n                        </div>\n                        Log In with Google\n                    </div>\n\n                    <div className='login-button' onClick={handleLocalStateChange('or')}>\n                        or\n                    </div>\n\n                    <input value={username} placeholder='Email' style={{ color: '#E4DEDE' }}  onChange={({ target }) => setUsername(target.value)}/>\n                    <input value={password} placeholder='Password' style={{ color: '#E4DEDE' }}  onChange={({ target }) => setPassword(target.value)}/>\n                    <div style={{ color: '#395185', textAlign: 'center' }} onClick={handleGlobalState('forgot password')}>Forgot Password</div>\n                    <div className='login-button login-grey' onClick={handleLogin}>\n                        Log In with Email\n                    </div>\n                </div>\n                <div style={{ color: '#E4DEDE', textAlign: 'center' }}>\n                    Don't have an account? <span style={{ color: '#395185' }} onClick={handleGlobalState('sign up')}>Sign Up</span>\n                </div>\n            </div>\n        )\n}\n\nconst LogIn = ({ handleInitUser, setGlobalState }) => {\n    // welcome, sign up, sign in, forgot password\n    const [localState, setLocalState] = useState('welcome')\n\n    const handleLocalStateChange = (state) => {\n        return () => {\n            console.log('clicked', state)\n            setLocalState(state)\n        }\n    }\n\n    if (localState === 'welcome')\n        return (\n            <div>\n                <Welcome handleGlobalState={handleLocalStateChange} />\n            </div>\n        )\n\n    if (localState === 'sign up')\n        return (\n            <div>\n                <SignUp handleGlobalState={handleLocalStateChange} />\n            </div>\n        )\n\n    if (localState === 'sign in')\n        return (\n            <div>\n                <SignIn handleInitUser={handleInitUser} handleGlobalState={handleLocalStateChange} />\n            </div>\n        )\n}\n\nexport default LogIn","/home/alex/Project/FullStack_Project/front/src/services/login.js",[],"/home/alex/Project/FullStack_Project/front/src/components/Workout.js",[],"/home/alex/Project/FullStack_Project/front/src/services/favourite_workouts.js",[],"/home/alex/Project/FullStack_Project/front/src/pages/Home.js",["73"],"import Workout from '../components/Workout'\n\nconst Home = ({ user }) => {\n    console.log('home', user)\n\n    return (\n        <div>\n        {user.favourite_workouts.map(workout => workout.name)}\n        </div>\n    )\n}\n\nexport default Home",{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":2,"column":8,"nodeType":"80","messageId":"81","endLine":2,"endColumn":14},{"ruleId":"78","severity":1,"message":"82","line":15,"column":10,"nodeType":"80","messageId":"81","endLine":15,"endColumn":25},{"ruleId":"78","severity":1,"message":"83","line":15,"column":27,"nodeType":"80","messageId":"81","endLine":15,"endColumn":45},{"ruleId":"78","severity":1,"message":"84","line":16,"column":10,"nodeType":"80","messageId":"81","endLine":16,"endColumn":22},{"ruleId":"78","severity":1,"message":"85","line":16,"column":24,"nodeType":"80","messageId":"81","endLine":16,"endColumn":39},{"ruleId":"74","replacedBy":"86"},{"ruleId":"76","replacedBy":"87"},{"ruleId":"78","severity":1,"message":"88","line":12,"column":24,"nodeType":"80","messageId":"81","endLine":12,"endColumn":37},{"ruleId":"89","severity":1,"message":"90","line":25,"column":5,"nodeType":"91","messageId":"92","endLine":33,"endColumn":6},{"ruleId":"78","severity":1,"message":"93","line":4,"column":8,"nodeType":"80","messageId":"81","endLine":4,"endColumn":24},{"ruleId":"78","severity":1,"message":"88","line":97,"column":24,"nodeType":"80","messageId":"81","endLine":97,"endColumn":37},{"ruleId":"78","severity":1,"message":"94","line":1,"column":8,"nodeType":"80","messageId":"81","endLine":1,"endColumn":15},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unused-vars","'lodash' is defined but never used.","Identifier","unusedVar","'defaultWorkouts' is assigned a value but never used.","'setDefaultWorkouts' is assigned a value but never used.","'workoutLists' is assigned a value but never used.","'setWorkoutLists' is assigned a value but never used.",["95"],["96"],"'setLocalState' is assigned a value but never used.","no-unreachable","Unreachable code.","IfStatement","unreachableCode","'WorkoutThumbnail' is defined but never used.","'Workout' is defined but never used.","no-global-assign","no-unsafe-negation"]